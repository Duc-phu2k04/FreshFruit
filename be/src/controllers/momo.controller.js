import * as momoService from '../services/momo.service.js';

const momoController = {
  // T·∫°o thanh to√°n MoMo
  createPayment: async (req, res) => {
    try {
      const { cartItems, voucher, address } = req.body;
      const userId = req.user._id;

      console.log("üì¶ D·ªØ li·ªáu t·ª´ FE g·ª≠i l√™n MoMo:", {
        cartItems,
        voucher,
        address
      });

      // T·∫°o ƒë∆°n h√†ng t·∫°m
      const order = await momoService.createOrderTemp({
        userId,
        cartItems,
        voucher,
        shippingAddress: address
      });

      console.log("‚úÖ ƒê∆°n h√†ng t·∫°m t·∫°o th√†nh c√¥ng:", order._id);

      // T·∫°o link thanh to√°n MoMo
      const paymentUrl = await momoService.createMomoPayment(order);

      console.log("üîó URL thanh to√°n MoMo:", paymentUrl);

      res.status(200).json({ paymentUrl });
    } catch (err) {
      console.error('‚ùå L·ªói khi t·∫°o thanh to√°n MoMo:', err);
      res.status(500).json({
        message: 'L·ªói t·∫°o thanh to√°n MoMo',
        error: err.message || 'Unknown error'
      });
    }
  },

  // X·ª≠ l√Ω IPN t·ª´ MoMo (x√°c nh·∫≠n thanh to√°n)
  handleIPN: async (req, res) => {
  try {
    const { resultCode, orderId } = req.body;
    console.log("üì• MoMo IPN received:", req.body);

    if (resultCode === 0) {
      await momoService.confirmMomoOrder(orderId);
      return res.status(200).json({ message: "X√°c nh·∫≠n thanh to√°n th√†nh c√¥ng" });
    } else {
      // üî¥ N·∫øu th·∫•t b·∫°i, c·∫≠p nh·∫≠t paymentStatus = "failed", status = "cancelled"
      await Order.findByIdAndUpdate(orderId, {
        paymentStatus: 'failed',
        status: 'cancelled'
      });

      console.warn("‚ö†Ô∏è Giao d·ªãch th·∫•t b·∫°i ho·∫∑c b·ªã h·ªßy b·ªüi ng∆∞·ªùi d√πng.");
      return res.status(200).json({ message: "Giao d·ªãch th·∫•t b·∫°i ho·∫∑c b·ªã h·ªßy" });
    }
  } catch (err) {
    console.error("‚ùå L·ªói x·ª≠ l√Ω IPN:", err);
    return res.status(500).json({ message: "L·ªói x·ª≠ l√Ω IPN", error: err.message });
  }
}

};

export default momoController;
